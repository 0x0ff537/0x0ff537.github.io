<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 0x0ff537</title>
    <link>https://0x0ff537.github.io/post/</link>
    <description>Recent content in Posts on 0x0ff537</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://0x0ff537.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DLL proxying &amp; sideloading</title>
      <link>https://0x0ff537.github.io/post/dllproxying/</link>
      <pubDate>Sun, 28 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://0x0ff537.github.io/post/dllproxying/</guid>
      <description>While studying DLL injection techniques, specifically DLL sideloading, I found this article by Palo Alto Network&amp;rsquo;s Unit 42 When Pentest Tools Go Brutal: Red-Teaming Tool Being Abused by Malicious Actors. The article describes how the dropper was using using a technique known as DLL search order hijacking to sideload a malicious crafted DLL that will inject a Brute Ratel agent (badger) into a remote process&amp;rsquo;s memory space, in this case RuntimeBroker.</description>
    </item>
    
  </channel>
</rss>
